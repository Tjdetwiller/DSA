public class Solution {

	public static int knapsack(int[] weights, int[] values, int n, int maxWeight) {
		//Your code goes here
        if(maxWeight<=0)
            return 0;
        int dp[][]=new int[n+1][maxWeight+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<maxWeight+1;j++){
                if(i<=0 || j<=0){
                    dp[i][j]=0;
                    continue;
                }
                if(j-weights[i-1]>=0 && j-weights[i-1]<maxWeight+1)
                  dp[i][j]=Math.max(dp[i-1][j],(dp[i-1][j-weights[i-1]]+values[i-1]));
                else
                  dp[i][j]=dp[i-1][j];  
            }
        }
        return dp[n][maxWeight];

	}

}
